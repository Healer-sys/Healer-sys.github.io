[{"categories":["gie经验"],"content":"U-boot 加载 bit 文件","date":"2024-07-23","objectID":"/posts/index/","tags":["Git"],"title":"总结一些Gie经验","uri":"/posts/index/"},{"categories":["gie经验"],"content":"Git撤销对远程仓库的push\u0026commit提交 ","date":"2024-07-23","objectID":"/posts/index/:0:0","tags":["Git"],"title":"总结一些Gie经验","uri":"/posts/index/"},{"categories":["gie经验"],"content":"撤销push 执行 git log查看日志，获取需要回退的版本号 执行 git reset –-soft \u003c版本号\u003e ，如 git reset –soft 4f5e9a90edeadcc45d85f43bd861a837fa7ce4c7 ，重置至指定版本的提交，达到撤销提交的目的 然后执行 git log 查看 此时，已重置至指定版本的提交，log中已经没有了需要撤销的提交 git reset 命令分为两种： git reset –-soft 与 git reset –-hard ，区别是： 前者表示只是改变了HEAD的指向，本地代码不会变化，我们使用git status依然可以看到，同时也可以git commit提交。后者直接回改变本地源码，不仅仅指向变化了，代码也回到了那个版本时的代码。 执行 git push origin 分支名 –-force ，强制提交当前版本号。 至此，撤销push提交完成。 ","date":"2024-07-23","objectID":"/posts/index/:1:0","tags":["Git"],"title":"总结一些Gie经验","uri":"/posts/index/"},{"categories":["gie经验"],"content":"撤销commit 执行 git log 查看需要撤销的commit的前面一个提交版本的id； 执行 git reset –hard commit_id ，该commit_id为需要撤销的commit的提交的前面一个提交的版本，即需要恢复到的提交的id，重置至指定版本的提交，达到撤销提交的目的 执行 git log 查看，commit提交已撤销 添加多个远程仓库 ","date":"2024-07-23","objectID":"/posts/index/:2:0","tags":["Git"],"title":"总结一些Gie经验","uri":"/posts/index/"},{"categories":["gie经验"],"content":"修改config文件 定位到.git/config [remote “origin”] 远程： url：推送地址 fetch：拉取地址 添加remote里面的url，如gitee仓库 push同步提交 git push origin 4. 至此，添加多个远程仓库完成。 查看分支和切换分支 ","date":"2024-07-23","objectID":"/posts/index/:3:0","tags":["Git"],"title":"总结一些Gie经验","uri":"/posts/index/"},{"categories":["gie经验"],"content":"查看分支 git branch -a ","date":"2024-07-23","objectID":"/posts/index/:4:0","tags":["Git"],"title":"总结一些Gie经验","uri":"/posts/index/"},{"categories":["gie经验"],"content":"切换分支 git checkout branchName git拉取、推送所有分支及标签 从origin1推送到origin2 git push origin2 'refs/remotes/origin1/*:refs/heads/*' # 推送后带有后缀demo01 git push origin2'refs/remotes/origin1/*:refs/heads/demo01/*' # 推送指定分支 git push origin2 'refs/remotes/origin1/dev:refs/heads/dev' 拉取所有分支到本地 git branch -r | grep -v '\\-\u003e' | while read remote; do git branch --track \"${remote#origin/}\" \"$remote\"; done git fetch --all git pull --all 拉取所有标签到本地 git fetch origin --prune 切换远程仓库 推送所有分支 git push --mirror 推送所有标签 git push origin --tags git迁移脚本 #!/bin/bash export oldUrl=$1 export newUrl=$2 export repoName=$3 printf \"oldUrl: %s\\nnewUrl: %s\\nrepoName: %s\\n\" $oldUrl $newUrl $repoName [[ -z \"${oldUrl}\" ]] \u0026\u0026 echo \"不能为空\" \u0026\u0026 exit [[ -z \"${newUrl}\" ]] \u0026\u0026 echo \"不能为空\" \u0026\u0026 exit [[ -z \"${repoName}\" ]] \u0026\u0026 echo \"不能为空\" \u0026\u0026 exit printf \"克隆原仓库\" cd repo || exit git.exe clone --progress -v \"${oldUrl}\" cd ${repoName} || exit #git branch -r | grep -v '\\-\u003e' | while read remote; do git branch --track \"${remote#origin/}\" \"$remote\"; done #git fetch --all #git pull --all #git fetch origin --prune # 原仓库 # dev -\u003e dev-origin # git remote change new repo echo \"增加新仓库\" git remote rename origin origin-old git remote add origin \"${newUrl}\" echo \"拉取所有仓库分支\" git fetch origin git fetch origin-old echo \"删除本地dev分支\" git branch -D dev # origin/dev -\u003e origin/dev-bak echo \"备份分支\" git checkout -b dev-origin origin-old/dev git checkout -b dev-yanshi4-11 origin-old/yanshi4-11 git checkout -b dev-bak origin/dev echo \"新仓库切出dev分支\" git checkout -b dev origin/dev echo \"复制ci配置到临时文件\" mkdir -p ../tmp/ || exit cp .gitlab-ci.yml Dockerfile ../tmp/ || exit echo \"切回旧仓库dev分支\" git checkout master git branch -D dev git checkout -b dev origin-old/yanshi4-11 echo \"配置ci配置\" mv -f ../tmp/* ./ || exit mv -f ../tmp/.gitlab-ci.yml ./ || exit git add . git commit -m \"ci适配\" echo \"删除旧仓库远程配置，防止误删\" git remote remove origin-old echo \"推送所有分支\" git push --progress \"origin\" dev-origin git push --progress \"origin\" dev-yanshi4-11 git push --progress \"origin\" dev-bak git push --force --progress \"origin\" dev:dev ","date":"2024-07-23","objectID":"/posts/index/:5:0","tags":["Git"],"title":"总结一些Gie经验","uri":"/posts/index/"},{"categories":null,"content":" 展开听音乐 🎵🎶 博客（英语：Blog）是一种在线日记型式的个人网站，借由张帖子章、图片或视频来记录生活、抒发情感或分享信息。博客上的文章通常根据张贴时间，以倒序方式由新到旧排列。 信息 一个 信息 横幅 ","date":"2024-07-21","objectID":"/posts/583bc6c/:0:0","tags":null,"title":"我的第一篇文章","uri":"/posts/583bc6c/"},{"categories":null,"content":" /** * 建站的初衷不是為了炫耀所知，而是記錄無知。 * 人知道的越多，就會發現無知的越多。有更廣袤的世界可以探索，是莫大的快樂！ * @since 2018-05-28 20:01:01 */ class Blog { constructor(name, author, url) { this.name = name; this.author = author; this.url = url; } } const site = new Blog('菠菜眾長', 'Lruihao', 'https://lruihao.cn'); ","date":"2021-09-07","objectID":"/about/:0:0","tags":null,"title":"關於","uri":"/about/"},{"categories":null,"content":"關於博客 站名“菠菜眾長”，取“兼收並蓄，博採眾長”之意。 建站 的初衷不是為了炫耀所知，而是記錄無知。 博客內容主要以 Web 前端開發方向為主，分享一些有趣程序、技巧、開發教程、心情和學習記錄等。如果你對我的博客內容感興趣，歡迎關注我的 GitHub 或者通過以下方式訂閱我的博客。 RSS GitHub 云 + 社区 一些臨時捕獲或蓄謀已久的想法 💡 {.text-center} @Lruihao's Recent Activities https://github.com/users/Lruihao/projects/1 ","date":"2021-09-07","objectID":"/about/:1:0","tags":null,"title":"關於","uri":"/about/"},{"categories":null,"content":"關於我 不卑不亢，不矜不伐，戒驕戒躁 不嗔不怒，不爭不棄，獨善其身 👨‍💻 一名前端開發工程師 👨‍💼 [@hugo-fixit][hugo-fixit] 的創建者 📝 我經常在 菠菜眾長[^1] 和 FixIt[^2] 上撰寫文章和文檔 我是一個喜歡折騰、執扭感性的人，有時候不限於前端，甚至不限於技術。 希望自己能夠保持謙遜，一直探索，砥礪前行！ ","date":"2021-09-07","objectID":"/about/:2:0","tags":null,"title":"關於","uri":"/about/"},{"categories":null,"content":"商務合作 📮 郵箱：1024#lruihao.cn ","date":"2021-09-07","objectID":"/about/:3:0","tags":null,"title":"關於","uri":"/about/"},{"categories":null,"content":"致謝 ","date":"2021-09-07","objectID":"/about/:4:0","tags":null,"title":"關於","uri":"/about/"}]